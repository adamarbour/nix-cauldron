{ lib, config, ... }:
let
  inherit (lib) types mkOption mkEnableOption filterAttrs;
  inherit (lib.lists) optionals;
  cfg = config.cauldron.host;
  
  hasBtrfs = (filterAttrs (_: v: v.fsType == "btrfs") config.fileSystems) != { };
  isX86 = config.nixpkgs.hostPlatform.system == "x86_64-linux";
in {
  options.cauldron.host = {
    boot = {
      enableTweaks = mkEnableOption "performance and security related parameters.";
      addKernelParams = mkOption {
        type = types.listOf types.str;
        default = [];
      };
      addKernelModules = mkOption {
        type = types.listOf types.str;
        default = [];
      };
      addAvailKernelModules = mkOption {
        type = types.listOf types.str;
        default = [];
      };
    };
  };
  
  config = {
    boot = {
      consoleLogLevel = 3;
      # increase the map count, this is important for applications that require a lot of memory mappings
      # such as games and emulators
      kernel.sysctl."vm.max_map_count" = 2147483642;
      
      initrd = {
        # Verbosity of the initrd
        # disabling verbosity removes only the mandatory messages generated by the NixOS
        verbose = false;
        
        kernelModules = [
          "nvme"
          "xhci_pci"
          "xhci_hcd"
          "ahci"
          "sd_mod"
          "dm_mod"
        ] ++ optionals hasBtrfs [
          "btrfs"
        ] ++ cfg.boot.addKernelModules;
        availableKernelModules = [
          "usbhid"
          "sd_mod"
          "sr_mod"
          "dm_mod"
          "uas"
          "usb_storage"
          "rtsx_usb_sdmmc"
          "rtsx_pci_sdmmc"
          "virtio_pci"
          "virtio_scsi"
          "virtio_blk"
          "ehci_pci"
        ] ++ optionals isX86 [
          "vmd"
          "ata_piix"
          "uhci_hcd"
        ] ++ cfg.boot.addAvailKernelModules;
      };
      
      kernelParams = [
        "nowatchdog"
        	"nmi_watchdog=0"
        	"usbcore.autosuspend=5"
      ] ++ optionals cfg.boot.enableTweaks [
        # https://en.wikipedia.org/wiki/Kernel_page-table_isolation
        # auto means kernel will automatically decide the pti state
        "pti=auto" # on || off
        
        # enable IOMMU for devices used in passthrough and provide better host performance
        "iommu=pt"
        
        # allow systemd to set and save the backlight state
        "acpi_backlight=native"
        
        # prevent the kernel from blanking plymouth out of the fb
        "fbcon=nodefer"

        # disable the cursor in vt to get a black screen during intermissions
        "vt.global_cursor_default=0"
      ] ++ cfg.boot.addKernelParams;
    };
  };
}
